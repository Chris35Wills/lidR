// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// pointInPolygon
bool pointInPolygon(NumericVector vertx, NumericVector verty, float pointx, float pointy);
RcppExport SEXP lidR_pointInPolygon(SEXP vertxSEXP, SEXP vertySEXP, SEXP pointxSEXP, SEXP pointySEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type vertx(vertxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type verty(vertySEXP);
    Rcpp::traits::input_parameter< float >::type pointx(pointxSEXP);
    Rcpp::traits::input_parameter< float >::type pointy(pointySEXP);
    __result = Rcpp::wrap(pointInPolygon(vertx, verty, pointx, pointy));
    return __result;
END_RCPP
}
// pointsInPolygon
LogicalVector pointsInPolygon(NumericVector vertx, NumericVector verty, NumericVector pointx, NumericVector pointy);
RcppExport SEXP lidR_pointsInPolygon(SEXP vertxSEXP, SEXP vertySEXP, SEXP pointxSEXP, SEXP pointySEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type vertx(vertxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type verty(vertySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pointx(pointxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pointy(pointySEXP);
    __result = Rcpp::wrap(pointsInPolygon(vertx, verty, pointx, pointy));
    return __result;
END_RCPP
}
// pointsInPolygons
IntegerVector pointsInPolygons(Rcpp::List vertx, Rcpp::List verty, NumericVector pointx, NumericVector pointy);
RcppExport SEXP lidR_pointsInPolygons(SEXP vertxSEXP, SEXP vertySEXP, SEXP pointxSEXP, SEXP pointySEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::List >::type vertx(vertxSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type verty(vertySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pointx(pointxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pointy(pointySEXP);
    __result = Rcpp::wrap(pointsInPolygons(vertx, verty, pointx, pointy));
    return __result;
END_RCPP
}
// readLASdata
List readLASdata(CharacterVector file, bool Intensity, bool ReturnNumber, bool NumberOfReturns, bool ScanDirectionFlag, bool EdgeofFlightline, bool Classification, bool ScanAngle, bool UserData, bool PointSourceID, bool RGB);
RcppExport SEXP lidR_readLASdata(SEXP fileSEXP, SEXP IntensitySEXP, SEXP ReturnNumberSEXP, SEXP NumberOfReturnsSEXP, SEXP ScanDirectionFlagSEXP, SEXP EdgeofFlightlineSEXP, SEXP ClassificationSEXP, SEXP ScanAngleSEXP, SEXP UserDataSEXP, SEXP PointSourceIDSEXP, SEXP RGBSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< CharacterVector >::type file(fileSEXP);
    Rcpp::traits::input_parameter< bool >::type Intensity(IntensitySEXP);
    Rcpp::traits::input_parameter< bool >::type ReturnNumber(ReturnNumberSEXP);
    Rcpp::traits::input_parameter< bool >::type NumberOfReturns(NumberOfReturnsSEXP);
    Rcpp::traits::input_parameter< bool >::type ScanDirectionFlag(ScanDirectionFlagSEXP);
    Rcpp::traits::input_parameter< bool >::type EdgeofFlightline(EdgeofFlightlineSEXP);
    Rcpp::traits::input_parameter< bool >::type Classification(ClassificationSEXP);
    Rcpp::traits::input_parameter< bool >::type ScanAngle(ScanAngleSEXP);
    Rcpp::traits::input_parameter< bool >::type UserData(UserDataSEXP);
    Rcpp::traits::input_parameter< bool >::type PointSourceID(PointSourceIDSEXP);
    Rcpp::traits::input_parameter< bool >::type RGB(RGBSEXP);
    __result = Rcpp::wrap(readLASdata(file, Intensity, ReturnNumber, NumberOfReturns, ScanDirectionFlag, EdgeofFlightline, Classification, ScanAngle, UserData, PointSourceID, RGB));
    return __result;
END_RCPP
}
// readLASheader
List readLASheader(CharacterVector file);
RcppExport SEXP lidR_readLASheader(SEXP fileSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< CharacterVector >::type file(fileSEXP);
    __result = Rcpp::wrap(readLASheader(file));
    return __result;
END_RCPP
}
// liblasWriteLAS
void liblasWriteLAS(CharacterVector file, List LASheader, NumericVector X, NumericVector Y, NumericVector Z, IntegerVector I, IntegerVector RN, IntegerVector NoR, IntegerVector SDF, IntegerVector EoF, IntegerVector C, IntegerVector SA, IntegerVector UD, IntegerVector PSI, NumericVector T, IntegerVector R, IntegerVector G, IntegerVector B);
RcppExport SEXP lidR_liblasWriteLAS(SEXP fileSEXP, SEXP LASheaderSEXP, SEXP XSEXP, SEXP YSEXP, SEXP ZSEXP, SEXP ISEXP, SEXP RNSEXP, SEXP NoRSEXP, SEXP SDFSEXP, SEXP EoFSEXP, SEXP CSEXP, SEXP SASEXP, SEXP UDSEXP, SEXP PSISEXP, SEXP TSEXP, SEXP RSEXP, SEXP GSEXP, SEXP BSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< CharacterVector >::type file(fileSEXP);
    Rcpp::traits::input_parameter< List >::type LASheader(LASheaderSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Y(YSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type I(ISEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type RN(RNSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type NoR(NoRSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type SDF(SDFSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type EoF(EoFSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type C(CSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type SA(SASEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type UD(UDSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type PSI(PSISEXP);
    Rcpp::traits::input_parameter< NumericVector >::type T(TSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type R(RSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type G(GSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type B(BSEXP);
    liblasWriteLAS(file, LASheader, X, Y, Z, I, RN, NoR, SDF, EoF, C, SA, UD, PSI, T, R, G, B);
    return R_NilValue;
END_RCPP
}
