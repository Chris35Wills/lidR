% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lasthin.r
\name{lasthin}
\alias{lasthin}
\alias{thin}
\title{Thin LiDAR data}
\usage{
lasthin(.las, density, homogenize = TRUE, resolution = 5)
}
\arguments{
\item{.las}{An object of the class \code{LAS}}

\item{density}{numeric. The expected density}

\item{homogenize}{logical. If \code{TRUE}, the algorithm tries to homogenize the pulse density to provide a uniform dataset. If \code{FALSE} the algorithm will reach the pulse density on the whole area.}

\item{resolution}{numeric. Cell size to compute the pulse density.}
}
\value{
It returns a \code{LAS} object.
}
\description{
Thin LIDAR data randomly removes a given proportion of pulses to reach specific pulse densities
}
\details{
lasthin is designed to produce output data sets that have uniform pulse densities
throughout the coverage area. For each cell, the proportion of pulses that will
be retained is computed using the calculated pulse density and the desired pulse
density. If required pulse density is greater than the local pulse density it returns
an unchanged set of points (it cannot increase the pulse density). In the way
of \code{homogenize = FALSE} it randomly removes pulses to reach the required pulse
density on the whole area (see \code{\link[lidR:lasarea]{lasarea}}). The cell size must be large enough
to compute a coherant local pulse density. 25 square meters looks good. 1 square
meter is meaningless.
}
\examples{
LASfile <- system.file("extdata", "Megaplot.laz", package="lidR")
lidar = readLAS(LASfile)

# By default the method is homogenize = TRUE
thinned = lidar \%>\% lasthin(1, resolution = 5)
lidar   \%>\% grid_density \%>\% plot
thinned \%>\% grid_density \%>\% plot

# Method homogenize = FALSE enables a global pulse density to be reached
thinned = lidar \%>\% lasthin(1, homogenize = FALSE)
thinned \%>\% summary
thinned \%>\% grid_density \%>\% plot
}

