% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cloud_metrics.r
\docType{methods}
\name{cloud_metrics}
\alias{cloud_metrics}
\alias{cloud_metrics,LAS-method}
\title{Compute metrics for a cloud of points}
\usage{
cloud_metrics(obj, func)

\S4method{cloud_metrics}{LAS}(obj, func)
}
\arguments{
\item{obj}{An object of class \code{LAS}}

\item{func}{The function to be applied to a cloud of points}
}
\value{
It returns a \code{data.table} containing the metrics
}
\description{
Computes a series of descriptive statistics for a LiDAR dataset
}
\details{
Computes a series of descriptive statistics for a LiDAR data set. Cloudmetrics
computes a single set of metrics for the entire data set. See \link[lidR:grid_metrics]{grid_metrics}
to compute metrics on a grid. Basically there are no predifined metrics. Users
must write their own function to create metrics (see example). The following existing
function can help the user to compute some metrics:
\itemize{
\item{\link[lidR:entropy]{entropy}}
\item{\link[lidR:VCI]{VCI}}
\item{\link[lidR:local_maximum]{local_maximum}}
\item{\link[lidR:LAD]{LAD}}
\item{\link[lidR:canopy_closure]{canopy_closure}}
\item{\link[lidR:fractal_dimension]{fractal_dimension}}
\item{\link[lidR:LAD]{LAD}}
}
}
\examples{
LASfile <- system.file("extdata", "Megaplot.laz", package="lidR")
lidar = readLAS(LASfile)

cloud_metrics(lidar, max(Z))
cloud_metrics(lidar, mean(Z))

# Define your own metric function
myMetrics = function(z, i, angle, pulseID)
{
  ret = list(
        npulse  = length(unique(pulseID)),
        hmean   = mean(z),
        hmax    = max(z),
        imean   = mean(i),
        angle   = mean(abs(angle))
        )

   return(ret)
 }

metrics = cloud_metrics(lidar, myMetrics(Z, Intensity, ScanAngle, pulseID))
}
\seealso{
\link[lidR:grid_metrics]{grid_metrics}
}

