% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cloud_metrics.r
\name{cloud_metrics}
\alias{cloud_metrics}
\title{Compute metrics for a cloud of points}
\usage{
cloud_metrics(obj, func)
}
\arguments{
\item{obj}{An object of class \code{LAS}}

\item{func}{The function to be applied to a cloud of points. Function must return a \code{list} (see example)}
}
\value{
It returns a \code{list} containing the metrics
}
\description{
\code{cloud_metrics} computes a series of user-defined descriptive statistics for a LiDAR dataset.
See \link[lidR:grid_metrics]{grid_metrics} to compute metrics on a grid. Basically there are
no predifined metrics. Users must write their own functions to create metrics (see example).
The following existing functions can serve as a guide to help users compute their own metrics:
\itemize{
\item{\link[lidR:entropy]{entropy}}
\item{\link[lidR:VCI]{VCI}}
\item{\link[lidR:LAD]{LAD}}
\item{\link[lidR:stdmetrics]{stdmetrics}}
}
}
\examples{
LASfile <- system.file("extdata", "Megaplot.laz", package="lidR")
lidar = readLAS(LASfile)

cloud_metrics(lidar, max(Z))
cloud_metrics(lidar, mean(Z))

# Define your own metric function
myMetrics = function(z, i, angle, pulseID)
{
  ret = list(
        npulse  = length(unique(pulseID)),
        hmean   = mean(z),
        hmax    = max(z),
        imean   = mean(i),
        angle   = mean(abs(angle))
        )

   return(ret)
 }

metrics = cloud_metrics(lidar, myMetrics(Z, Intensity, ScanAngle, pulseID))

# Predefined metrics
cloud_metrics(lidar, .stdmetrics)
}
\seealso{
\link[lidR:grid_metrics]{grid_metrics}
\link[lidR:stdmetrics]{stdmetrics}
\link[lidR:entropy]{entropy}
\link[lidR:VCI]{VCI}
\link[lidR:LAD]{LAD}
}

