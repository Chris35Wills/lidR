% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/setGeneric.r, R/ClassLidar.r
\docType{methods}
\name{voxelize}
\alias{voxelize}
\alias{voxelize,Lidar-method}
\title{Voxelize the space and compute metrics for each voxel}
\usage{
voxelize(obj, res, func)

\S4method{voxelize}{Lidar}(obj, res, func)
}
\arguments{
\item{obj}{An object of class \code{Lidar}}

\item{res}{numeric. The size of the cells}

\item{func}{the function to be apply to each cells}
}
\value{
It returns a \code{data.table} containing the metrics for each voxel. The table has the class "voxels" enabling to easier plotting.
}
\description{
Voxelize the cloud of points and compute a series of descriptive statistics for
each voxel.
}
\details{
Voxelize creates a 3D matrix of voxels with a given resolution. It creates a voxel
from the cloud of point if there is at least one point in the voxel. For each voxel
the function allows computation of one or several derived metrics in the same way as
the gridMetrics functions.
Basically there are no predifined metrics. Users must write their own function to create metrics.
Voxelize will dispach the LiDAR data for each voxel in the user's function. The user writes their
function without considering grid cells, only a cloud of points (see example).
}
\examples{
LASfile <- system.file("extdata", "Megaplot.las", package="lidR")
lidar = LoadLidar(LASfile)

# Cloud of points is voxelized with a 1 meter resolution and in each voxel
# the number of points is computed.
voxelize(lidar, 1, length(Z))

# Cloud of points is voxelized with a 1 meter resolution and in each voxel
# the mean scan angle of points is computed.
voxelize(lidar, 1, mean(ScanAngle))

# Define your own metric function
myMetrics = function(i, angle, pulseID)
{
  ret = list(
        npulse  = length(unique(pulseID)),
        angle   = mean(angle),
        imean   = mean(i)
        )

   return(ret)
 }

voxels = voxelize(lidar, 20, myMetrics(Intensity, ScanAngle, pulseID))

plot(voxels, "angle")
plot(voxels, "imean")
#etc.
}

