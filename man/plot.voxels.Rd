% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.voxels.r
\name{plot.voxels}
\alias{plot.voxels}
\title{Plot voxelized LiDAR data}
\usage{
\method{plot}{voxels}(x, y, color = "Z", colorPalette = height.colors,
  bg = "black", display = "points", trim = 1, ...)
}
\arguments{
\item{x}{An object of the class \code{voxels}}

\item{y}{Unused (inherited from R base)}

\item{color}{characters. The field used to color the points. Default is Z coordinates. Or a vector of colors.}

\item{colorPalette}{characters. A color palette name. Default is \code{height.colors} provided by the package lidR}

\item{bg}{The color for the background. Default is black.}

\item{display}{character. By default is "points" to plot voxels as points for fast display.
Could be set to "cubes" to display nice shaded cube. But "cubes" method is very very slow.
It cannot be use for a large number of voxels.}

\item{trim}{numeric. Enables trimming of values when outliers break the color palette range.
Default is 1 meaning that the whole range of the values is used for the color palette.
0.9 means thant 10% of the hightest values are not used to defined the colors palette.
In this case the values higher that the 90th percentile are set to the highest color. They are not removed}

\item{\dots}{Supplementary parameters for \link[rgl:points3d]{points3d} if display method is "points"}
}
\description{
This functions implements a 3D plot method for voxels objects
}
\details{
By default the function plots points for fast display purposes. It can also plot real voxels.
}
\examples{
LASfile <- system.file("extdata", "Megaplot.laz", package="lidR")

lidar = readLAS(LASfile)

voxels = voxelize(lidar, 1, list(Imean = mean(Intensity)))
plot(voxels, color = "Imean", colorPalette = heat.colors, trim=0.99)
}
\seealso{
\link[rgl:points3d]{points3d}
\link[lidR:height.colors]{height.colors}
\link[lidR:forest.colors]{forest.colors}
\link[grDevices:heat.colors]{heat.colors}
\link[grDevices:colorRamp]{colorRampPalette}
\link[lidR:voxelize]{voxelize}
}

